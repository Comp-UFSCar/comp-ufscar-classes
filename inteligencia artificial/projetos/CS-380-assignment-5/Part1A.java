package Assignment_5;

/**
 *
 * @author lucasdavid
 */
public class Part1A extends OthelloState {

    public Part1A(int a_boardSize) {
        super(a_boardSize);
    }
    
    /**
     * Improved version of OthelloState.score() method.
     * 
     * Calculate the score of the current state based of how many pieces are currently placed
     * in each of the possible branched states generated by the current.
     * This method is exponential, both in space and execution. But it is perfect.
     * 
     * @return score int : a integer that represents how likely is for the players to win.
     */
    @Override
    public int score() {
        // gets the score of the current state
        int score = super.score();

        // for all possible states generated from here, and recursevely, for the states generated from them,
        // calculates its score and add it to the average variable.
        for (OthelloMove move : generateMoves()) {
            score += applyMoveCloning(move).score();
        }

        return score;
    }
}
